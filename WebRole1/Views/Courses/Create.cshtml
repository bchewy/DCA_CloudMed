@model WebRole1.Models.CourseViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Courses", FormMethod.Post,
new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="mt-4">
            <h4 class="text-center">CourseViewModel</h4>
            <p class="lead text-center">
                Fill up the form to start a brand new course!
            </p>
            <hr />

            <!-- A drop-down list for selection of course type -->
            <div class="form-group">
                @Html.LabelFor(model => model.CourseType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.CourseType, new { @class = "form-control" })
                </div>
            </div>


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseFee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseFee, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                    @Html.ValidationMessageFor(model => model.CourseFee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="imageFile">
                    Image file
                </label>
                <div class="col-md-10">
                    <input type="file" name="imageFile" accept="image/*"
                           class="form-control fileupload" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DoctorID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DoctorID, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                    @Html.ValidationMessageFor(model => model.DoctorID, "", new { @class = "text-danger" })
                </div>
            </div>






            <div id="seminar">
                <div class="form-group" id="seminar1">
                    @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="seminar2">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="seminar3">
                    @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="seminar4">
                    @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                        @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="seminar5">
                    @Html.LabelFor(model => model.Venue, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Venue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Venue, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="webinar">
                <div class="form-group" id="webinar1">
                    @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="webinar2">
                    @Html.LabelFor(model => model.DateReleased, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateReleased, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now } })
                        @Html.ValidationMessageFor(model => model.DateReleased, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#seminar').hide();
        $('#CourseType').change(function () {
            if (this.value == '0') { //Enum value for "Seminar" is 0
                $('#seminar').hide();
                $('#webinar').show();
            }
            else {
                $('#seminar').show();
                $('#webinar').hide();
            }
        });

    });

</script>
